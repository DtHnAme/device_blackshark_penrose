From bbd7185aaec9e4f6e666193e379985f8c3089a52 Mon Sep 17 00:00:00 2001
From: DtHnAme <1904685725@qq.com>
Date: Tue, 14 Mar 2023 12:00:16 +0800
Subject: [PATCH 2/2] Support for device specific input Filter

Change-Id: Iade92445ed3c397e6e50a65480249ce8b6384e92
---
 core/res/res/values/config.xml                |  5 +++++
 core/res/res/values/symbols.xml               |  5 +++++
 .../server/policy/PhoneWindowManager.java     | 21 +++++++++++++++++++
 3 files changed, 31 insertions(+)

diff --git a/core/res/res/values/config.xml b/core/res/res/values/config.xml
index f4efcc7e..d0e7e43e 100644
--- a/core/res/res/values/config.xml
+++ b/core/res/res/values/config.xml
@@ -4404,4 +4404,9 @@
 
     <!-- Component names of the services which will keep critical code path warm -->
     <string-array name="config_keep_warming_services" translatable="false" />
+
+    <!-- InputFilter Class-->
+    <string name="config_deviceInputFilterLibs" translatable="false"></string>
+    <string name="config_deviceInputFilterClasses" translatable="false"></string>
+
 </resources>
diff --git a/core/res/res/values/symbols.xml b/core/res/res/values/symbols.xml
index 8401a1bc..1fe11c1a 100644
--- a/core/res/res/values/symbols.xml
+++ b/core/res/res/values/symbols.xml
@@ -4058,4 +4058,9 @@
   <java-symbol type="array" name="config_notificationMsgPkgsAllowedAsConvos" />
 
   <java-symbol type="array" name="config_keep_warming_services" />
+
+  <!-- InputFilter Class-->
+  <java-symbol type="string" name="config_deviceInputFilterLibs" />
+  <java-symbol type="string" name="config_deviceInputFilterClasses" />
+
 </resources>
diff --git a/services/core/java/com/android/server/policy/PhoneWindowManager.java b/services/core/java/com/android/server/policy/PhoneWindowManager.java
index 28724e2e..fceba6aa 100644
--- a/services/core/java/com/android/server/policy/PhoneWindowManager.java
+++ b/services/core/java/com/android/server/policy/PhoneWindowManager.java
@@ -178,6 +178,7 @@ import android.view.HapticFeedbackConstants;
 import android.view.IDisplayFoldListener;
 import android.view.IWindowManager;
 import android.view.InputDevice;
+import android.view.InputFilter;
 import android.view.KeyCharacterMap;
 import android.view.KeyCharacterMap.FallbackAction;
 import android.view.KeyEvent;
@@ -683,6 +684,8 @@ public class PhoneWindowManager implements WindowManagerPolicy {
 
     private LineageButtons mLineageButtons;
 
+    private InputFilter mInputFilter;
+
     private static final int MSG_DISPATCH_MEDIA_KEY_WITH_WAKE_LOCK = 3;
     private static final int MSG_DISPATCH_MEDIA_KEY_REPEAT_WITH_WAKE_LOCK = 4;
     private static final int MSG_KEYGUARD_DRAWN_COMPLETE = 5;
@@ -2261,6 +2264,21 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             Slog.d(TAG, "" + mDeviceKeyHandlers.size() + " device key handlers loaded");
         }
 
+        final String deviceInputFilterLibs = res.getString(R.string.config_deviceInputFilterLibs);
+        final String deviceInputFilterClasses = res.getString(R.string.config_deviceInputFilterClasses);
+
+        try {
+            PathClassLoader loader = new PathClassLoader(
+                    deviceInputFilterLibs, getClass().getClassLoader());
+            Class<?> klass = loader.loadClass(deviceInputFilterClasses);
+            Constructor<?> constructor = klass.getConstructor(Context.class);
+            mInputFilter = (InputFilter) constructor.newInstance(mContext);
+        } catch (Exception e) {
+            Slog.w(TAG, "Could not instantiate device input filter "
+                    + deviceInputFilterLibs + " from class "
+                    + deviceInputFilterClasses, e);
+        }
+
         // Register for torch off events
         BroadcastReceiver torchReceiver = new BroadcastReceiver() {
             @Override
@@ -5605,6 +5623,9 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         mLineageButtons = new LineageButtons(mContext);
 
         mAutofillManagerInternal = LocalServices.getService(AutofillManagerInternal.class);
+        if (mInputFilter != null) {
+            mWindowManagerInternal.setInputFilter(mInputFilter);
+        }
     }
 
     /** {@inheritDoc} */
-- 
2.34.1

